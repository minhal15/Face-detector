{"version":3,"sources":["components/navigation/navigation.js","components/Logo/logo.js","components/FaceRecognition/FaceRecognition.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Signin/Signin.js","components/Register/Register.js","App.js","reportWebVitals.js","index.js"],"names":["Navigation","_ref","onRouteChange","isSignedIn","_jsx","style","display","justifyContent","children","onClick","className","_jsxs","Logo","FaceRecognition","imageUrl","box","id","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","Rank","name","entries","concat","Signin","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","console","log","json","user","loadUser","_createClass","key","this","htmlFor","href","React","Component","Register","onNameChange","initialState","input","route","joined","App","_Component","data","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","IMAGE_URL","returnClarifaiRequest","count","Object","assign","catch","err","_this$state","ParticlesBg","bg","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.afe8569c.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n\n        if (isSignedIn) {\n            return (\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <p onClick={() => onRouteChange('signout')} className=\"f3 link dim black underline pa3 pointer\">Sign Out</p>\n                </nav>\n            );\n        } else {\n            return (\n                <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\n                    <p onClick={() => onRouteChange('signin')} className=\"f3 link dim black underline pa3 pointer\">Sign In</p>\n                    <p onClick={() => onRouteChange('register')} className=\"f3 link dim black underline pa3 pointer\">Register</p>\n                </nav>\n            );\n        }\n}\n\nexport default Navigation;","import React from \"react\";\nimport head from './head.png';\nimport './logo.css';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n{/*             <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n            <div className=\"Tilt-inner pa3\"> \n            <img syle={{paddingTop: '5px'}} alt= 'logo' src={head}/> </div>\n            </Tilt> */}\n        </div>\n    );\n}\n\nexport default Logo;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n    return (\n       <div className=\"center ma\">\n           <div className=\"absolute mt2\">\n            <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\n            <div className=\"bounding-box\" style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\n           </div>\n       </div>\n    )\n}\n\nexport default FaceRecognition;","import React from \"react\";\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\n    return (\n        <div>\n            <p className='f3'>\n                {'This robot will find faces in your pictures, give it a shot'}\n            </p>\n            <div className=\"center\">\n                <div className=\"form center pa4 br3 shadow-2\">\n                    <input className='f4 br4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\n                    <button className='w-30 br4 grow f4 link ph3 pv2 dib white bg-blue' onClick={onButtonSubmit}>\n                        Find</button>\n                </div>\n            </div>\n\n        </div>\n\n    );\n}\n\nexport default ImageLinkForm;","import React from \"react\";\n\n\nconst Rank = ({ name, entries }) => {\n    return (\n        <div>\n            <div className=\"white f3\">\n                {`${name}, your current entry count is`}\n            </div>\n            <div className=\"white f1\">\n                {entries}\n            </div>\n        </div>\n    );\n}\n\nexport default Rank;","import userEvent from '@testing-library/user-event';\nimport React from 'react';\n\nclass Signin extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            signInEmail: '',\n            signInPassword: ''\n        }\n    }\n    \n    onEmailChange = (event) => {\n        this.setState({signInEmail: event.target.value})\n    }\n    onPasswordChange = (event) => {\n        this.setState({signInPassword: event.target.value})\n    }\n    onSubmitSignIn = () => {\n        fetch('https://evening-lowlands-29784-9fa1fc8413cc.herokuapp.com/signin', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.signInEmail,\n                password: this.state.signInPassword\n            })\n            \n        })\n            .then(response => {\n                console.log(response); // Log the response\n                response.json();\n            })\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home')\n                } \n            })\n    }\n    render() {\n        const { onRouteChange } = this.props;\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                                <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\"\n                                onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\" \n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n                            </fieldset>\n                            <div className=\"\">\n                            <input\n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                                type=\"submit\" \n                                value=\"Sign in\" \n                            />\n                            </div>\n                            <div className=\"lh-copy mt3\">\n                            <p onClick={() => onRouteChange('register')} href=\"#0\" className=\"f6 link dim black db pointer\">Register</p>\n                            </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n\n}\n\nexport default Signin;","import React from 'react';\n\nclass Register extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n            name: ''\n        }\n    }\n    onNameChange = (event) => {\n        this.setState({name: event.target.value})\n    }\n    onEmailChange = (event) => {\n        this.setState({email: event.target.value})\n    }\n    onPasswordChange = (event) => { \n        this.setState({password: event.target.value})\n    }\n\n    onSubmitSignIn = () => {\n        fetch('https://evening-lowlands-29784-9fa1fc8413cc.herokuapp.com/register', {\n            method: 'post',\n            headers: {'Content-Type': 'application/json'},\n            body: JSON.stringify({\n                email: this.state.email,\n                password: this.state.password,\n                name: this.state.name\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                if (user.id) {\n                    this.props.loadUser(user);\n                    this.props.onRouteChange('home');\n                }\n            })\n    }\n    render() {\n        return (\n            <article className=\"br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\n                <main className=\"pa4 black-80\">\n                    <div className=\"measure\">\n                        <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                            <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\n                            <div className=\"mt3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                                <input \n                                className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"text\" \n                                name=\"name\"  \n                                id=\"name\" \n                                onChange={this.onNameChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">Email</label>\n                                <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"email\" \n                                name=\"email-address\"  \n                                id=\"email-address\"\n                                onChange={this.onEmailChange}\n                                />\n                            </div>\n                            <div className=\"mv3\">\n                                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                                <input \n                                className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" \n                                type=\"password\" \n                                name=\"password\"  \n                                id=\"password\"\n                                onChange={this.onPasswordChange}\n                                />\n                            </div>\n                            </fieldset>\n                            <div className=\"\">\n                            <input\n                                onClick={this.onSubmitSignIn}\n                                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\" \n                                type=\"submit\" \n                                value=\"Register\" \n                            />\n                            </div>\n                    </div>\n                </main>\n            </article>\n        );\n    }\n\n}\n\nexport default Register;","import React, {Component} from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/Logo/logo';\nimport ParticlesBg from 'particles-bg'\n// import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport './App.css';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\n\n// const app = new Clarifai.App({\n//   apiKey:'4bb3a25f2ea84d16a3bb1756fc5dbf39' // enter your API key here\n// }) ;\n\nconst returnClarifaiRequest = (imageUrl) => {\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = '2ea1e3178ac14268ab18667a98d57b87';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'mo-min14';       \n    const APP_ID = 'face_detect_app';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';  \n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    return requestOptions\n\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // app.models.predict('face-detection', this.state.input)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequest(this.state.input))\n        .then(response => response.json())\n        .then((response)=>{\n          if (response) {\n            fetch('https://evening-lowlands-29784-9fa1fc8413cc.herokuapp.com/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                  id: this.state.user.id\n                })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }))\n              })\n          }\n            this.displayFaceBox(this.calculateFaceLocation(response));\n          }) \n          .catch((err) => {\n            console.log(err);\n          });    \n    \n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { imageUrl, box, isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            \n          )\n          \n        }\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}