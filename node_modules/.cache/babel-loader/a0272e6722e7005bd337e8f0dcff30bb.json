{"ast":null,"code":"var _jsxFileName = \"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/App.js\";\nimport React, { Component } from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/Logo/logo';\nimport ParticlesBg from 'particles-bg';\n// import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport './App.css';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('dotenv').config();\n\n// const app = new Clarifai.App({\n//   apiKey:'4bb3a25f2ea84d16a3bb1756fc5dbf39' // enter your API key here\n// }) ;\n\nconst returnClarifaiRequest = imageUrl => {\n  // Your PAT (Personal Access Token) can be found in the portal under Authentification\n  const PAT = process.env.REACT_APP_CLARIFAI_PAT;\n  const USER_ID = process.env.REACT_APP_CLARIFAI_USER_ID;\n  const APP_ID = process.env.REACT_APP_CLARIFAI_APP_ID;\n  const MODEL_ID = process.env.REACT_APP_CLARIFAI_MODEL_ID;\n  const IMAGE_URL = imageUrl;\n  const raw = JSON.stringify({\n    \"user_app_id\": {\n      \"user_id\": USER_ID,\n      \"app_id\": APP_ID\n    },\n    \"inputs\": [{\n      \"data\": {\n        \"image\": {\n          \"url\": IMAGE_URL\n        }\n      }\n    }]\n  });\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Authorization': 'Key ' + PAT\n    },\n    body: raw\n  };\n  return requestOptions;\n};\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n};\nclass App extends Component {\n  constructor() {\n    super();\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          entries: data.entries,\n          joined: data.joined\n        }\n      });\n    };\n    this.calculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('inputimage');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageUrl: this.state.input\n      });\n      // app.models.predict('face-detection', this.state.input)\n      fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequest(this.state.input)).then(response => response.json()).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState(Object.assign(this.state.user, {\n              entries: count\n            }));\n          });\n        }\n        this.displayFaceBox(this.calculateFaceLocation(response));\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState(initialState);\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n      this.setState({\n        route: route\n      });\n    };\n    this.state = initialState;\n  }\n  render() {\n    const {\n      imageUrl,\n      box,\n      isSignedIn,\n      route\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(ParticlesBg, {\n        type: \"cobweb\",\n        bg: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          entries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageUrl: imageUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","Navigation","Logo","ParticlesBg","FaceRecognition","ImageLinkForm","Rank","Signin","Register","require","config","returnClarifaiRequest","imageUrl","PAT","process","env","REACT_APP_CLARIFAI_PAT","USER_ID","REACT_APP_CLARIFAI_USER_ID","APP_ID","REACT_APP_CLARIFAI_APP_ID","MODEL_ID","REACT_APP_CLARIFAI_MODEL_ID","IMAGE_URL","raw","JSON","stringify","requestOptions","method","headers","body","initialState","input","box","route","isSignedIn","user","id","name","email","entries","joined","App","constructor","loadUser","data","setState","calculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","onInputChange","event","target","value","onButtonSubmit","state","fetch","then","response","json","count","Object","assign","catch","err","console","log","onRouteChange","render"],"sources":["/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/App.js"],"sourcesContent":["import React, {Component} from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/Logo/logo';\nimport ParticlesBg from 'particles-bg'\n// import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport './App.css';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\nrequire('dotenv').config();\n\n// const app = new Clarifai.App({\n//   apiKey:'4bb3a25f2ea84d16a3bb1756fc5dbf39' // enter your API key here\n// }) ;\n\nconst returnClarifaiRequest = (imageUrl) => {\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = process.env.REACT_APP_CLARIFAI_PAT;\n    const USER_ID = process.env.REACT_APP_CLARIFAI_USER_ID;\n    const APP_ID = process.env.REACT_APP_CLARIFAI_APP_ID;\n    const MODEL_ID = process.env.REACT_APP_CLARIFAI_MODEL_ID;  \n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    return requestOptions\n\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // app.models.predict('face-detection', this.state.input)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequest(this.state.input))\n        .then(response => response.json())\n        .then((response)=>{\n          if (response) {\n            fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                  id: this.state.user.id\n                })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }))\n              })\n          }\n            this.displayFaceBox(this.calculateFaceLocation(response));\n          }) \n          .catch((err) => {\n            console.log(err);\n          });    \n    \n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { imageUrl, box, isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            \n          )\n          \n        }\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}