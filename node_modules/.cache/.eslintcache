[{"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/index.js":"1","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/App.js":"2","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/reportWebVitals.js":"3","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/navigation/navigation.js":"4","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/FaceRecognition/FaceRecognition.js":"5","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/ImageLinkForm/ImageLinkForm.js":"6","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Rank/Rank.js":"7","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Logo/logo.js":"8","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Signin/Signin.js":"9","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Register/Register.js":"10"},{"size":554,"mtime":1685858746291,"results":"11","hashOfConfig":"12"},{"size":4909,"mtime":1689206179565,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1685858746291,"results":"14","hashOfConfig":"12"},{"size":823,"mtime":1685858746291,"results":"15","hashOfConfig":"12"},{"size":494,"mtime":1685858746284,"results":"16","hashOfConfig":"12"},{"size":726,"mtime":1685858746284,"results":"17","hashOfConfig":"12"},{"size":338,"mtime":1688883247992,"results":"18","hashOfConfig":"12"},{"size":452,"mtime":1685858746284,"results":"19","hashOfConfig":"12"},{"size":3624,"mtime":1690674490613,"results":"20","hashOfConfig":"12"},{"size":3844,"mtime":1690674480468,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"17pv74a",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/index.js",[],["45","46"],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/App.js",["47","48","49"],"import React, {Component} from 'react';\nimport Navigation from './components/navigation/navigation.js';\nimport Logo from './components/Logo/logo';\nimport ParticlesBg from 'particles-bg'\n// import Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition.js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm.js';\nimport Rank from './components/Rank/Rank.js';\nimport './App.css';\nimport Signin from './components/Signin/Signin.js';\nimport Register from './components/Register/Register.js';\n\n// const app = new Clarifai.App({\n//   apiKey:'4bb3a25f2ea84d16a3bb1756fc5dbf39' // enter your API key here\n// }) ;\n\nconst returnClarifaiRequest = (imageUrl) => {\n    // Your PAT (Personal Access Token) can be found in the portal under Authentification\n    const PAT = '2ea1e3178ac14268ab18667a98d57b87';\n    // Specify the correct user_id/app_id pairings\n    // Since you're making inferences outside your app's scope\n    const USER_ID = 'mo-min14';       \n    const APP_ID = 'face_detect_app';\n    // Change these to whatever model and image URL you want to use\n    const MODEL_ID = 'face-detection';  \n    const IMAGE_URL = imageUrl;\n\n    const raw = JSON.stringify({\n      \"user_app_id\": {\n          \"user_id\": USER_ID,\n          \"app_id\": APP_ID\n      },\n      \"inputs\": [\n          {\n              \"data\": {\n                  \"image\": {\n                      \"url\": IMAGE_URL\n                  }\n              }\n          }\n      ]\n    });\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Key ' + PAT\n      },\n      body: raw\n    };\n\n    return requestOptions\n\n}\n\nconst initialState = {\n  input: '',\n  imageUrl: '',\n  box: {},\n  route: 'signin',\n  isSignedIn: false,\n  user: {\n    id: '',\n    name: '',\n    email: '',\n    entries: 0,\n    joined: ''\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = initialState;\n  }\n\n  loadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      entries: data.entries,\n      joined: data.joined\n    }})\n  }\n\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input})\n    // app.models.predict('face-detection', this.state.input)\n    fetch(\"https://api.clarifai.com/v2/models/\" + 'face-detection' + \"/outputs\", returnClarifaiRequest(this.state.input))\n        .then(response => response.json())\n        .then((response)=>{\n          if (response) {\n            fetch('http://localhost:3000/image', {\n              method: 'put',\n              headers: {'Content-Type': 'application/json'},\n              body: JSON.stringify({\n                  id: this.state.user.id\n                })\n            })\n              .then(response => response.json())\n              .then(count => {\n                this.setState(Object.assign(this.state.user, { entries: count }))\n              })\n          }\n            this.displayFaceBox(this.calculateFaceLocation(response));\n          }) \n          .catch((err) => {\n            console.log(err);\n          });    \n    \n\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState(initialState)\n    } else if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const { imageUrl, box, isSignedIn, route } = this.state;\n    return (\n      <div className=\"App\">\n        <ParticlesBg type=\"cobweb\" bg={true} />\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n        { route === 'home' \n          ? <div>\n              <Logo />\n              <Rank name={this.state.user.name} entries={this.state.user.entries} />\n              <ImageLinkForm onInputChange={this.onInputChange} onButtonSubmit={this.onButtonSubmit}/>\n              <FaceRecognition box={box} imageUrl={imageUrl}/>\n            </div>\n          : (\n            route === 'signin'\n            ? <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            : <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n            \n          )\n          \n        }\n      </div>\n\n    );\n  }\n}\n\nexport default App;\n","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/reportWebVitals.js",[],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/navigation/navigation.js",[],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/FaceRecognition/FaceRecognition.js",[],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/ImageLinkForm/ImageLinkForm.js",[],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Rank/Rank.js",[],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Logo/logo.js",["50"],"import React from \"react\";\nimport head from './head.png';\nimport './logo.css';\n\nconst Logo = () => {\n    return (\n        <div className=\"ma4 mt0\">\n{/*             <Tilt className=\"Tilt br2 shadow-3\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n            <div className=\"Tilt-inner pa3\"> \n            <img syle={{paddingTop: '5px'}} alt= 'logo' src={head}/> </div>\n            </Tilt> */}\n        </div>\n    );\n}\n\nexport default Logo;","/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Signin/Signin.js",["51"],"/Users/minhalmuraj/Desktop/Face-detector/Face-detector/src/components/Register/Register.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":25,"column":11,"nodeType":"58","messageId":"59","endLine":25,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":112,"column":49,"nodeType":"62","messageId":"63","endLine":112,"endColumn":50},{"ruleId":"60","severity":1,"message":"61","line":112,"column":68,"nodeType":"62","messageId":"63","endLine":112,"endColumn":69},{"ruleId":"56","severity":1,"message":"64","line":2,"column":8,"nodeType":"58","messageId":"59","endLine":2,"endColumn":12},{"ruleId":"56","severity":1,"message":"65","line":1,"column":8,"nodeType":"58","messageId":"59","endLine":1,"endColumn":17},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'MODEL_ID' is assigned a value but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","'head' is defined but never used.","'userEvent' is defined but never used.","no-global-assign","no-unsafe-negation"]